{"ast":null,"code":"var _jsxFileName = \"D:\\\\LEARNING_AND_PROJECTS\\\\Udemy\\\\ReactJs\\\\code\\\\01-starting-project 2\\\\src\\\\components\\\\CourseGoals\\\\CourseInput\\\\CourseInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../../UI/Button/Button\";\nimport styles from \"./CourseInput.module.css\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseInput = props => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const goalInputChangeHandler = event => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    //added from the tutorial:\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      //input is ampty\n      return;\n    }\n    props.onAddGoal(enteredValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Course Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: goalInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Add Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n//me\n// import styled from \"styled-components\";\n// const FormControl = styled.div`\n\n//   margin: 0.5rem 0;\n\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color: ${props=>props.invalid ? 'red' : 'black' };\n// }\n\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${props=>props.invalid ? 'red' : '#ccc' };\n//   background: ${props=>props.invalid ? '#ffd7d7' : 'transparent' };\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n// }\n\n// & input:focus {\n//   outline: none;\n//   background: #fad0ec;\n//   border-color: #8b005d;\n// }\n// `;\n\n// const CourseInput = (props) => {\n//   const [enteredValue, setEnteredValue] = useState(\"\");\n\n//   const [isValid, setIsValid] = useState(true);\n\n//   const goalInputChangeHandler = (event) => {\n//     if (event.target.value.trim().length > 0) {\n//       setIsValid(true);\n//     }\n//     setEnteredValue(event.target.value);\n//   };\n\n//   const formSubmitHandler = (event) => {\n//     event.preventDefault();\n\n//     //added from the tutorial:\n//     if (enteredValue.trim().length === 0) {\n//       setIsValid(false);\n//       //input is ampty\n//       return;\n//     }\n\n//     props.onAddGoal(enteredValue);\n//   };\n\n//   return (\n//     <form onSubmit={formSubmitHandler}>\n//       <FormControl invalid = {!isValid}>\n//         <label>Course Goal</label>\n//         <input type=\"text\" onChange={goalInputChangeHandler} />\n//       </FormControl>\n//       <Button type=\"submit\">Add Goal</Button>\n//     </form>\n//   );\n// };\n_s(CourseInput, \"ThKE3neuvaE9uj2GU0j+/HEwCa4=\");\n_c = CourseInput;\nexport default CourseInput;\n{\n  /* <label style={{ color: !isValid ? \"red\" : \"black\" }}>Course Goal</label>\n  <input\n  style={{\n    borderColor: !isValid ? \"red\" : \"black\",\n    background: !isValid ? \"salmon\" : \"transparent\",\n  }}\n  type=\"text\"\n  onChange={goalInputChangeHandler}\n  /> */\n}\n{/* <div className={`form-control ${!isValid ? 'invalid' : ''}`}></div> */}\nvar _c;\n$RefreshReg$(_c, \"CourseInput\");","map":{"version":3,"names":["React","useState","Button","styles","styled","jsxDEV","_jsxDEV","CourseInput","props","_s","enteredValue","setEnteredValue","isValid","setIsValid","goalInputChangeHandler","event","target","value","trim","length","formSubmitHandler","preventDefault","onAddGoal","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","_c","$RefreshReg$"],"sources":["D:/LEARNING_AND_PROJECTS/Udemy/ReactJs/code/01-starting-project 2/src/components/CourseGoals/CourseInput/CourseInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Button from \"../../UI/Button/Button\";\n\n\nimport styles from  \"./CourseInput.module.css\";\n\n\nimport styled from \"styled-components\";\n\n\nconst CourseInput = (props) => {\n  const [enteredValue, setEnteredValue] = useState(\"\");\n\n  const [isValid, setIsValid] = useState(true);\n\n  const goalInputChangeHandler = (event) => {\n    if (event.target.value.trim().length > 0) {\n      setIsValid(true);\n    }\n    setEnteredValue(event.target.value);\n  };\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    //added from the tutorial:\n    if (enteredValue.trim().length === 0) {\n      setIsValid(false);\n      //input is ampty\n      return;\n    }\n\n    props.onAddGoal(enteredValue);\n  };\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div>\n        <label>Course Goal</label>\n        <input type=\"text\" onChange={goalInputChangeHandler} />\n      </div>\n      <Button type=\"submit\">Add Goal</Button>\n    </form>\n  );\n};\n\n\n\n\n\n\n//me\n// import styled from \"styled-components\";\n// const FormControl = styled.div`\n\n//   margin: 0.5rem 0;\n\n// & label {\n//   font-weight: bold;\n//   display: block;\n//   margin-bottom: 0.5rem;\n//   color: ${props=>props.invalid ? 'red' : 'black' };\n// }\n\n// & input {\n//   display: block;\n//   width: 100%;\n//   border: 1px solid ${props=>props.invalid ? 'red' : '#ccc' };\n//   background: ${props=>props.invalid ? '#ffd7d7' : 'transparent' };\n//   font: inherit;\n//   line-height: 1.5rem;\n//   padding: 0 0.25rem;\n// }\n\n// & input:focus {\n//   outline: none;\n//   background: #fad0ec;\n//   border-color: #8b005d;\n// }\n// `;\n\n\n\n\n// const CourseInput = (props) => {\n//   const [enteredValue, setEnteredValue] = useState(\"\");\n\n//   const [isValid, setIsValid] = useState(true);\n\n//   const goalInputChangeHandler = (event) => {\n//     if (event.target.value.trim().length > 0) {\n//       setIsValid(true);\n//     }\n//     setEnteredValue(event.target.value);\n//   };\n\n//   const formSubmitHandler = (event) => {\n//     event.preventDefault();\n\n//     //added from the tutorial:\n//     if (enteredValue.trim().length === 0) {\n//       setIsValid(false);\n//       //input is ampty\n//       return;\n//     }\n\n//     props.onAddGoal(enteredValue);\n//   };\n\n//   return (\n//     <form onSubmit={formSubmitHandler}>\n//       <FormControl invalid = {!isValid}>\n//         <label>Course Goal</label>\n//         <input type=\"text\" onChange={goalInputChangeHandler} />\n//       </FormControl>\n//       <Button type=\"submit\">Add Goal</Button>\n//     </form>\n//   );\n// };\n\n\n\n\nexport default CourseInput;\n\n{\n  /* <label style={{ color: !isValid ? \"red\" : \"black\" }}>Course Goal</label>\n\n<input\n  style={{\n    borderColor: !isValid ? \"red\" : \"black\",\n    background: !isValid ? \"salmon\" : \"transparent\",\n  }}\n  type=\"text\"\n  onChange={goalInputChangeHandler}\n/> */\n}\n\n\n\n{/* <div className={`form-control ${!isValid ? 'invalid' : ''}`}></div> */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,wBAAwB;AAG3C,OAAOC,MAAM,MAAO,0BAA0B;AAG9C,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMa,sBAAsB,GAAIC,KAAK,IAAK;IACxC,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;MACxCN,UAAU,CAAC,IAAI,CAAC;IAClB;IACAF,eAAe,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACnCA,KAAK,CAACM,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAIX,YAAY,CAACQ,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MACpCN,UAAU,CAAC,KAAK,CAAC;MACjB;MACA;IACF;IAEAL,KAAK,CAACc,SAAS,CAACZ,YAAY,CAAC;EAC/B,CAAC;EAED,oBACEJ,OAAA;IAAMiB,QAAQ,EAAEH,iBAAkB;IAAAI,QAAA,gBAChClB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEhB;MAAuB;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,eACNtB,OAAA,CAACJ,MAAM;MAAC2B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;;AAOD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAnB,EAAA,CA5GMF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAiHjB,eAAeA,WAAW;AAE1B;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARE;AAcF,CAAC;AAA0E,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}